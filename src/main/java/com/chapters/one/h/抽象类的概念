1.java提供了一种专门供子类来继承的类，这个类就是抽象类
	语法：
		abstract class 类名 {
		
		}
		
2.java也提供了一种特殊的方法，这个方法不是一个完整的方法，只含有方法的声明，没有方法体，
	这样的方法叫做抽象方法
	语法：
		其他修饰符 abstract 返回值 方法名();
		
3.抽象类的特征
	3.1 抽象类不能被直接实例化
		因为抽象类存在抽象方法，而抽象方法没有实体，创建对象后，抽象对象调用抽象方法是没有意义的
		
	3.2 抽象类的子类必须实现抽象方法，除非子类也是抽象类
	
	3.3 抽象类里面可以有普通方法，也可以有抽象方法，有抽象方法的类一定是抽象类
			
	3.4 abstract不能与private修饰同一个方法，
		因为private成员对外是不可见的，只能在本类中使用，这样子类就无法重写抽象方法
		
	3.5 abstract不能与static修饰同一个方法，
		static修饰的方法可以用类名调用，而对于abstract修饰的方法没有具体的方法实现，所有不能直接调用
		
	3.6 final和abstract不可以同时修饰一个方法，
		因为用final修饰后，修饰类代表不可以继承，修饰方法不可重写，
		abstract修饰类就是用来被继承的，修饰方法就是用来被重写的
		
	3.7 同样可以拥有成员变量和普通的成员方法
	
	总结：abstract 不能和 private static final共用